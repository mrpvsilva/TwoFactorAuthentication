name: Push Container to Heroku

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:      
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./sonarscanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir ./sonarscanner
          dotnet tool update dotnet-sonarscanner --tool-path ./sonarscanner
          ls
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo ${{ env.GITHUB_TOKEN }}
          ./sonarscanner/dotnet-sonarscanner begin /k:"mrpvsilva_TwoFactorAuthentication" /o:"mrpvsilva" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          ./sonarscanner/dotnet-sonarscanner  end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      # - name: Build, Push and Deploy to Heroku
      #   id: heroku
      #   uses: jctaveras/heroku-deploy@v1.0.0      
      #   with:
      #     email: ${{ secrets.HEROKU_EMAIL }}
      #     api_key: ${{ secrets.HEROKU_API_KEY }}
      #     app_name: ${{ secrets.HEROKU_APP_NAME }}
      #     dockerfile: '.'
